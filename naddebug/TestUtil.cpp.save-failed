#include "TestUtil.h"

#include <iostream>
#include <iomanip>



TestUtil::TestUtil()
{
}


TestUtil::~TestUtil()
{
}

std::vector<GMath::Point2D> TestUtil::LinSpace(double (*f)(double), double lower, double upper, int space)
{
	std::vector<GMath::Point2D> ret;
	double step = (upper - lower) / (space - 1);
	for (int i = 0; i < space; i++)
		ret.emplace_back(lower + i * step, f(lower + i * step));
	return ret;
}


template<class T>
T TestUtil::GetInterp(double(*f)(double), double lower, double upper, int space)
{
    TestUtil::LinSpace(f, lower, upper, space);
	return T(TestUtil::LinSpace(f, lower, upper, space));
}

template<class T>
T TestUtil::TestInterp(double(*f)(double), double lower, double upper, int space, int testSize)
{
	T interp = GetInterp<T>(f, lower, upper, space);
	auto test = TestUtil::LinSpace(f, lower, upper, testSize);

	std::cout << "Absolute error per point:\n";
	for (auto& p : test)
		std::cout << std::abs(interp(p.first) - f(p.first)) << '\n';
}

